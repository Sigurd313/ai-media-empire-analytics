# .github/workflows/analytics-dashboard.yml
name: Analytics Dashboard Generator

on:
  schedule:
    - cron: '45 * * * *'  # Every hour at :45 (after data collection)
  workflow_dispatch:
  workflow_run:
    workflows: ["YouTube Analytics Collector", "Telegram Analytics Collector"]
    types:
      - completed

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  generate-dashboard:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'
    
    - name: Install dependencies
      run: |
        pip install pandas numpy scipy requests
    
    - name: Generate Analytics Dashboard
      run: |
        if [ -f "scripts/analytics_dashboard.py" ]; then
          python scripts/analytics_dashboard.py
        else
          echo "Dashboard script not found"
          exit 1
        fi
    
    - name: Check for Alerts
      env:
        DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
      run: |
        if [ -f "scripts/analytics_alerts.py" ]; then
          python scripts/analytics_alerts.py
        fi
    
    - name: Commit dashboard updates
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add dashboard.md data/dashboard.json daily_summary.md alert_issue.md 2>/dev/null || true
        git diff --staged --quiet || git commit -m "ðŸ“Š Update analytics dashboard [$(date +'%Y-%m-%d %H:%M')]"
        git push || echo "No changes to push"
    
    - name: Setup GitHub Pages
      if: github.ref == 'refs/heads/main'
      run: |
        mkdir -p docs
        cp dashboard.md docs/index.md
        cp data/dashboard.json docs/
        
        # Create simple HTML wrapper
        cat > docs/index.html << 'EOF'
        <!DOCTYPE html>
        <html>
        <head>
            <title>AI Media Empire Analytics</title>
            <meta charset="UTF-8">
            <meta name="viewport" content="width=device-width, initial-scale=1">
            <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/water.css@2/out/water.css">
            <style>
                table { width: 100%; }
                .urgent { color: red; }
                .high { color: orange; }
                .medium { color: yellow; }
                .low { color: green; }
            </style>
        </head>
        <body>
            <div id="content">Loading...</div>
            <script src="https://cdn.jsdelivr.net/npm/marked/marked.min.js"></script>
            <script>
                fetch('index.md')
                    .then(response => response.text())
                    .then(text => {
                        document.getElementById('content').innerHTML = marked.parse(text);
                    });
                
                // Auto-refresh every 5 minutes
                setTimeout(() => location.reload(), 300000);
            </script>
        </body>
        </html>
        EOF
        
        git add docs/
        git diff --staged --quiet || git commit -m "ðŸ“„ Update GitHub Pages dashboard"
        git push
    
    - name: Create summary artifact
      uses: actions/upload-artifact@v4
      with:
        name: analytics-dashboard
        path: |
          dashboard.md
          data/dashboard.json
          daily_summary.md
          alert_issue.md
        retention-days: 30

  alert-on-critical:
    needs: generate-dashboard
    runs-on: ubuntu-latest
    if: failure()
    
    steps:
    - name: Create Issue on Failure
      uses: actions/github-script@v7
      with:
        script: |
          github.rest.issues.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            title: 'ðŸš¨ Analytics Dashboard Generation Failed',
            body: 'The analytics dashboard workflow failed to complete. Check the [workflow logs](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}) for details.',
            labels: ['bug', 'analytics']
          })
